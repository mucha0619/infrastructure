# Default values for pvw-visualizer-gpu.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 172.236.5.21:31500/paraview/paraview
  #repository: nvcr.io/nvidia-hpcvis/paraview
  #repository: kitware/paraviewweb
  #pullPolicy: IfNotPresent
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: v1.0.2
  #tag: egl-py3-5.11.0
  #tag: pvw-egl-demo-v5.6.0

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: 
  fsGroup: 1000

securityContext: 
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: paraview.kisti.sqkcloud.com
      paths:
        #        - path: /proxy
        #  pathType: ImplementationSpecific
        #  backend:
        #    service:
        #      port:
        #        number: 80
        #- path: /paraview
        #  pathType: ImplementationSpecific
        #  backend:
        #    service:
        #      port:
        #       number: 80
        - path: /visualizer
          pathType: ImplementationSpecific
          backend:
            service:
              port:
                number: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.

  requests:
    cpu: 4
    memory: 4G
    nvidia.com/gpu: 1

  limits:
    cpu: 8
    memory: 8G
    nvidia.com/gpu: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: paraview-volume
    persistentVolumeClaim:
      claimName: shared-pvc
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: paraview-volume
    mountPath: "/data"

# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: []
  # type: gpu
tolerations:
  - key: "nvidia.com/gpu"
    operator: "Exists"
    effect: "NoSchedule"

affinity: {}

